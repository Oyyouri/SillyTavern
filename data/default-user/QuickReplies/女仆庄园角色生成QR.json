{
    "version": 2,
    "name": "女仆庄园角色生成QR",
    "disableSend": false,
    "placeBeforeInput": false,
    "injectInput": false,
    "color": "rgba(0, 0, 0, 0)",
    "onlyBorderColor": true,
    "qrList": [
        {
            "id": 2,
            "showLabel": false,
            "label": "✨",
            "title": "",
            "message": "/let defaultPreset \"Lyean3.13奈亚子\" ||\n/let defaultModel \"claude-3-5-sonnet-20241022\" ||\n/let genCharPreset \"Lyean3.13奈亚子角色生成\" ||\n/let genCharModel \"claude-3-5-sonnet-20241022\" ||\n/let entryFileName \"女仆庄园角色集\" ||\n\n/let designContent ||\n/let charInfo ||\n/let entryName ||\n/let keyword ||\n/let uid ||\n/let cleanUp {:\n  /flushvar charList ||\n  /flushvar specialRequirements ||\n\n  /preset {{var::defaultPreset}} ||\n  /model {{var::defaultModel}} ||\n:} ||\n/let cleanUpAndAbort {:\n  /:cleanUp ||\n  /abort\n:} ||\n/let execRegexForExtraction {: regexName= text=\n  /regex name={{var::regexName}} {{var::text}} |\n  /if left={{pipe}} rule=neq right={{var::text}} else={:\n    /echo {{var::regexName}}失败 ||\n    /:cleanUpAndAbort ||\n  :} {:\n    /return {{pipe}}\n  :}\n:} ||\n/let extractCharInfo {: content=\n  /rand |\n  /var content 这只是为了防止content已经是yaml格式{{pipe}}{{newline}}{{var::content}} |\n  /:execRegexForExtraction regexName=捕获角色信息 text={{pipe}} |\n  /var charInfo {{pipe}} ||\n  \n  /:execRegexForExtraction regexName=捕获角色中文名 text={{var::charInfo}} |\n  /var entryName {{pipe}} ||\n  \n  /var keyword {{var::entryName}} ||\n  /:execRegexForExtraction regexName=捕获角色英文名 text={{var::charInfo}} |\n  /var keyword {{var::keyword}}, {{pipe}}  ||\n  /:execRegexForExtraction regexName=捕获角色简略身份 text={{var::charInfo}} |\n  /var keyword {{var::keyword}}, {{pipe}} ||\n  /:execRegexForExtraction regexName=捕获角色详细身份 text={{var::charInfo}} |\n  /var keyword {{var::keyword}}, {{pipe}} ||\n  \n  /regex name=格式化逗号为英文逗号 {{var::keyword}} |\n  /var keyword {{pipe}} ||\n:} ||\n/let createCharEntry {:\n  /createentry file={{var::entryFileName}} key={{var::keyword}} {{var::charInfo}} |\n  /var uid {{pipe}} |\n  /echo 已创建条目，UID:{{pipe}} ||\n\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=comment {{var::entryName}} ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=excludeRecursion 1 ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=preventRecursion 1 ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=position 4 ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=depth 2 ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=role 0 ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=scanDepth 2 ||\n  \n  /addvar key=charList {{newline}}{{newline}}* “{{var::keyword}}” |\n  /setentryfield file={{var::entryFileName}} uid=0 field=content {{pipe}} ||\n\n  /echo 已生成角色：{{var::entryName}} ||\n:} ||\n\n/preset {{var::genCharPreset}} ||\n/model {{var::genCharModel}} ||\n\n/# 获取角色世界书中已有的角色名单，请确保 UID:0 的条目存在 |\n/getentryfield file={{var::entryFileName}} field=content 0 |\n/setvar key=charList {{pipe}} ||\n\n/input okButton=\"确定\" 请输入特殊要求，留空则为按需生成 |\n/if left={{pipe}} rule=eq right=\"\" else={:\n  /pass {{newline}}{{newline}}{{pipe}}\n:} {:\n  /pass \" None\"\n:} |\n/setvar key=specialRequirements {{pipe}} ||\n\n/# 调用模型生成角色条目，然后隐藏消息 |\n/delay 1000 ||\n/trigger await=true ||\n/hide {{lastMessageId}} ||\n\n/messages hidden=on role=assistant {{lastMessageId}} |\n/var designContent {{pipe}} ||\n\n/fuzzy mode=first list=[\"开始生成\", \"```yaml\", \"```\"] threshold=0.2 {{var::designContent}} |\n/if left={{pipe}} rule=eq right=\"\" {:\n  /echo 未找到需要生成的人物！ ||\n  /:cleanUpAndAbort\n:} ||\n\n/:extractCharInfo content={{var::designContent}} ||\n\n/popup wider=true okButton=确定 cancelButton=取消 result=true \"\n<h2 style=\\\"text-align: start;\\\">将使用以下内容生成角色条目，是否接受？</h2>\n<div style=\\\"display: flex; flex-direction: column; justify-content: center; align-items: flex-start; margin-bottom: 16px; gap: 0px;\\\">\n  <h3>角色名称：</h3>\n  <span style=\\\"text-align: start;\\\">{{var::entryName}}</span>\n</div>\n<div style=\\\"display: flex; flex-direction: column; justify-content: center; align-items: flex-start; margin-bottom: 16px; gap: 0px;\\\">\n  <h3>关键词：</h3>\n  <span style=\\\"text-align: start;\\\">{{var::keyword}}</span>\n</div>\n<div style=\\\"display: flex; flex-direction: column; justify-content: center; align-items: flex-start; gap: 0px;\\\">\n  <h3>角色信息（只读）：</h3>\n  <textarea class=\\\"edit_textarea mdHotkeys\\\" rows=16 readonly>{{var::charInfo}}</textarea>\n</div>\n\" |\n/if left={{pipe}} rule=neq right=1 {:\n  /echo 已取消生成角色条目 ||\n  /:cleanUpAndAbort\n:} ||\n\n/:createCharEntry ||\n/:cleanUp ||",
            "contextList": [],
            "preventAutoExecute": true,
            "isHidden": false,
            "executeOnStartup": false,
            "executeOnUser": false,
            "executeOnAi": false,
            "executeOnChatChange": false,
            "executeOnGroupMemberDraft": false,
            "automationId": ""
        },
        {
            "id": 4,
            "showLabel": false,
            "label": "🔄️",
            "title": "",
            "message": "/let entryFileName \"女仆庄园角色集\" ||\n\n/let designContent ||\n/let charInfo ||\n/let entryName ||\n/let keyword ||\n/let uid ||\n/let cleanUp {:\n  /flushvar charList ||\n:} ||\n/let cleanUpAndAbort {:\n  /:cleanUp ||\n  /abort\n:} ||\n/let execRegexForExtraction {: regexName= text=\n  /regex name={{var::regexName}} {{var::text}} |\n  /if left={{pipe}} rule=neq right={{var::text}} else={:\n    /echo {{var::regexName}}失败 ||\n    /:cleanUpAndAbort ||\n  :} {:\n    /return {{pipe}}\n  :}\n:} ||\n/let extractCharInfo {: content=\n  /rand |\n  /var content 这只是为了防止content已经是yaml格式{{pipe}}{{newline}}{{var::content}} |\n  /:execRegexForExtraction regexName=捕获角色信息 text={{pipe}} |\n  /var charInfo {{pipe}} ||\n  \n  /:execRegexForExtraction regexName=捕获角色中文名 text={{var::charInfo}} |\n  /var entryName {{pipe}} ||\n  \n  /var keyword {{var::entryName}} ||\n  /:execRegexForExtraction regexName=捕获角色英文名 text={{var::charInfo}} |\n  /var keyword {{var::keyword}}, {{pipe}}  ||\n  /:execRegexForExtraction regexName=捕获角色简略身份 text={{var::charInfo}} |\n  /var keyword {{var::keyword}}, {{pipe}} ||\n  /:execRegexForExtraction regexName=捕获角色详细身份 text={{var::charInfo}} |\n  /var keyword {{var::keyword}}, {{pipe}} ||\n  \n  /regex name=格式化逗号为英文逗号 {{var::keyword}} |\n  /var keyword {{pipe}} ||\n:} ||\n/let createCharEntry {:\n  /createentry file={{var::entryFileName}} key={{var::keyword}} {{var::charInfo}} |\n  /var uid {{pipe}} |\n  /echo 已创建条目，UID:{{pipe}} ||\n\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=comment {{var::entryName}} ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=excludeRecursion 1 ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=preventRecursion 1 ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=position 4 ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=depth 2 ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=role 0 ||\n  /setentryfield file={{var::entryFileName}} uid={{var::uid}} field=scanDepth 2 ||\n  \n  /addvar key=charList {{newline}}{{newline}}* “{{var::keyword}}” |\n  /setentryfield file={{var::entryFileName}} uid=0 field=content {{pipe}} ||\n\n  /echo 已生成角色：{{var::entryName}} ||\n:} ||\n\n/# 获取角色世界书中已有的角色名单，请确保 UID:0 的条目存在 |\n/getentryfield file={{var::entryFileName}} field=content 0 |\n/setvar key=charList {{pipe}} ||\n\n/input okButton=\"确定\" 请输入包含角色信息的消息内容，留空则使用对话中最后一条 AI 生成的消息 |\n/if left={{pipe}} rule=eq right=\"\" else={:\n  /pass {{pipe}}\n:} {:\n  /messages hidden=on role=assistant {{lastMessageId}} |\n  /pass {{pipe}}\n:} |\n/var designContent {{pipe}} ||\n\n/fuzzy mode=first list=[\"开始生成\", \"```yaml\", \"```\"] threshold=0.2 {{var::designContent}} |\n/if left={{pipe}} rule=eq right=\"\" {:\n  /echo 未找到需要生成的人物！ ||\n  /:cleanUpAndAbort\n:} ||\n\n/:extractCharInfo content={{var::designContent}} ||\n\n/popup wider=true okButton=确定 cancelButton=取消 result=true \"\n<h2 style=\\\"text-align: start;\\\">将使用以下内容生成角色条目，是否接受？</h2>\n<div style=\\\"display: flex; flex-direction: column; justify-content: center; align-items: flex-start; margin-bottom: 16px; gap: 0px;\\\">\n  <h3>角色名称：</h3>\n  <span style=\\\"text-align: start;\\\">{{var::entryName}}</span>\n</div>\n<div style=\\\"display: flex; flex-direction: column; justify-content: center; align-items: flex-start; margin-bottom: 16px; gap: 0px;\\\">\n  <h3>关键词：</h3>\n  <span style=\\\"text-align: start;\\\">{{var::keyword}}</span>\n</div>\n<div style=\\\"display: flex; flex-direction: column; justify-content: center; align-items: flex-start; gap: 0px;\\\">\n  <h3>角色信息（只读）：</h3>\n  <textarea class=\\\"edit_textarea mdHotkeys\\\" rows=16 readonly>{{var::charInfo}}</textarea>\n</div>\n\" |\n/if left={{pipe}} rule=neq right=1 {:\n  /echo 已取消生成角色条目 ||\n  /:cleanUpAndAbort\n:} ||\n\n/:createCharEntry ||\n/:cleanUp ||",
            "contextList": [],
            "preventAutoExecute": true,
            "isHidden": false,
            "executeOnStartup": false,
            "executeOnUser": false,
            "executeOnAi": false,
            "executeOnChatChange": false,
            "executeOnGroupMemberDraft": false,
            "automationId": ""
        }
    ],
    "idIndex": 8
}